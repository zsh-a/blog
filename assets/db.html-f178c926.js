const e=JSON.parse('{"key":"v-ce861af4","path":"/posts/db.html","title":"db","lang":"zh-CN","frontmatter":{"title":"db","tag":["db","database"],"description":"索引 hash 索引 B tree 将sex放在索引数据中CREATE INDEX btree_idx_age ON titanic_survivor(age) USING BTREE INCLUDE (sex); 对节点修改树结构变化复杂，需要加锁 不适合distinct value cardinality小数据 跳表 跳表通过一个概率值来决定是否需要添加上层节点，实现起来，变化比较局部 内存的需求相对于 B 树更少 缓存不友好 逆向查询() -&gt; 双向链表 位图 sex: bitmap male: 10001111 female: 01110000 不适用于高并发环境","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/db.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"db"}],["meta",{"property":"og:description","content":"索引 hash 索引 B tree 将sex放在索引数据中CREATE INDEX btree_idx_age ON titanic_survivor(age) USING BTREE INCLUDE (sex); 对节点修改树结构变化复杂，需要加锁 不适合distinct value cardinality小数据 跳表 跳表通过一个概率值来决定是否需要添加上层节点，实现起来，变化比较局部 内存的需求相对于 B 树更少 缓存不友好 逆向查询() -&gt; 双向链表 位图 sex: bitmap male: 10001111 female: 01110000 不适用于高并发环境"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-27T16:51:03.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:tag","content":"db"}],["meta",{"property":"article:tag","content":"database"}],["meta",{"property":"article:modified_time","content":"2023-10-27T16:51:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"db\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-27T16:51:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Sort","slug":"sort","link":"#sort","children":[{"level":3,"title":"外部归并","slug":"外部归并","link":"#外部归并","children":[]},{"level":3,"title":"B+Tree","slug":"b-tree","link":"#b-tree","children":[]}]},{"level":2,"title":"聚合(aggregation)","slug":"聚合-aggregation","link":"#聚合-aggregation","children":[{"level":3,"title":"排序","slug":"排序","link":"#排序","children":[]},{"level":3,"title":"hash","slug":"hash","link":"#hash","children":[]}]},{"level":2,"title":"JOIN","slug":"join","link":"#join","children":[{"level":3,"title":"NestedLoopJoin","slug":"nestedloopjoin","link":"#nestedloopjoin","children":[]},{"level":3,"title":"SortMergeJoin","slug":"sortmergejoin","link":"#sortmergejoin","children":[]},{"level":3,"title":"HashJoin","slug":"hashjoin","link":"#hashjoin","children":[]}]},{"level":2,"title":"Query Rewrite","slug":"query-rewrite","link":"#query-rewrite","children":[]},{"level":2,"title":"多表join","slug":"多表join","link":"#多表join","children":[{"level":3,"title":"Heuristic approach","slug":"heuristic-approach","link":"#heuristic-approach","children":[]}]},{"level":2,"title":"隔离级别","slug":"隔离级别","link":"#隔离级别","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[{"level":3,"title":"加锁实现机制(Lock-based protocols)","slug":"加锁实现机制-lock-based-protocols","link":"#加锁实现机制-lock-based-protocols","children":[]},{"level":3,"title":"时间戳机制(Timestamp-based protocols)","slug":"时间戳机制-timestamp-based-protocols","link":"#时间戳机制-timestamp-based-protocols","children":[]},{"level":3,"title":"多版本并发控制 Multi-Version Concurrency Control (MVCC)","slug":"多版本并发控制-multi-version-concurrency-control-mvcc","link":"#多版本并发控制-multi-version-concurrency-control-mvcc","children":[]},{"level":3,"title":"快照隔离(Snapshot Isolation)","slug":"快照隔离-snapshot-isolation","link":"#快照隔离-snapshot-isolation","children":[]}]},{"level":2,"title":"存储","slug":"存储","link":"#存储","children":[]},{"level":2,"title":"数据处理","slug":"数据处理","link":"#数据处理","children":[{"level":3,"title":"分布式算子","slug":"分布式算子","link":"#分布式算子","children":[]},{"level":3,"title":"实现","slug":"实现-1","link":"#实现-1","children":[]}]},{"level":2,"title":"分布式事务","slug":"分布式事务","link":"#分布式事务","children":[{"level":3,"title":"原子提交协议","slug":"原子提交协议","link":"#原子提交协议","children":[]},{"level":3,"title":"实现高可用和原子提交","slug":"实现高可用和原子提交","link":"#实现高可用和原子提交","children":[]}]},{"level":2,"title":"Shadow Paging","slug":"shadow-paging","link":"#shadow-paging","children":[]},{"level":2,"title":"Journal File","slug":"journal-file","link":"#journal-file","children":[]},{"level":2,"title":"WRITE-AHEAD LOG","slug":"write-ahead-log","link":"#write-ahead-log","children":[{"level":3,"title":"CHECKPOINTS","slug":"checkpoints","link":"#checkpoints","children":[]}]}],"git":{"createdTime":1698425463000,"updatedTime":1698425463000,"contributors":[{"name":"zsh","email":"zsh-a@foxmail.com","commits":1}]},"readingTime":{"minutes":12.56,"words":3768},"filePathRelative":"posts/db.md","localizedDate":"2023年10月27日","excerpt":"<h1> 索引</h1>\\n<ul>\\n<li>\\n<p>hash 索引</p>\\n</li>\\n<li>\\n<p>B tree</p>\\n<ul>\\n<li>将sex放在索引数据中<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">CREATE</span> <span class=\\"token keyword\\">INDEX</span> btree_idx_age <span class=\\"token keyword\\">ON</span> titanic_survivor<span class=\\"token punctuation\\">(</span>age<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">USING</span> <span class=\\"token keyword\\">BTREE</span> INCLUDE <span class=\\"token punctuation\\">(</span>sex<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li>对节点修改树结构变化复杂，需要加锁</li>\\n<li>不适合distinct value cardinality小数据</li>\\n</ul>\\n</li>\\n<li>\\n<p>跳表</p>\\n<ul>\\n<li>跳表通过一个概率值来决定是否需要添加上层节点，实现起来，变化比较局部</li>\\n<li>内存的需求相对于 B 树更少</li>\\n<li>缓存不友好</li>\\n<li>逆向查询() -&gt; 双向链表</li>\\n</ul>\\n</li>\\n<li>\\n<p>位图</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>sex:    bitmap\\nmale:   10001111\\nfemale: 01110000\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><ul>\\n<li>不适用于高并发环境</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
